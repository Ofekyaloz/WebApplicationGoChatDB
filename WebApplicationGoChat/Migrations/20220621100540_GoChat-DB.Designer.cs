// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebApplicationGoChat.Data;

#nullable disable

namespace WebApplicationGoChat.Migrations
{
    [DbContext(typeof(WebApplicationGoChatContext))]
    [Migration("20220621100540_GoChat-DB")]
    partial class GoChatDB
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("WebApplicationGoChat.Models.Contact", b =>
                {
                    b.Property<string>("id")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("userid")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("last")
                        .HasColumnType("longtext");

                    b.Property<string>("lastdate")
                        .HasColumnType("longtext");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("server")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("id", "userid");

                    b.HasIndex("userid");

                    b.ToTable("Contact");
                });

            modelBuilder.Entity("WebApplicationGoChat.Models.Message", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("contactid")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("contactuserid")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("content")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("created")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("sent")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("id");

                    b.HasIndex("contactid", "contactuserid");

                    b.ToTable("Message");
                });

            modelBuilder.Entity("WebApplicationGoChat.Models.User", b =>
                {
                    b.Property<string>("Username")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Connection")
                        .HasColumnType("longtext");

                    b.Property<string>("Email")
                        .HasColumnType("longtext");

                    b.Property<string>("Nickname")
                        .HasColumnType("longtext");

                    b.Property<string>("Password")
                        .HasColumnType("longtext");

                    b.Property<string>("Photo")
                        .HasColumnType("longtext");

                    b.Property<string>("Token")
                        .HasColumnType("longtext");

                    b.HasKey("Username");

                    b.ToTable("User");
                });

            modelBuilder.Entity("WebApplicationGoChat.Models.Contact", b =>
                {
                    b.HasOne("WebApplicationGoChat.Models.User", "user")
                        .WithMany("Contacts")
                        .HasForeignKey("userid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("user");
                });

            modelBuilder.Entity("WebApplicationGoChat.Models.Message", b =>
                {
                    b.HasOne("WebApplicationGoChat.Models.Contact", "contact")
                        .WithMany("Messages")
                        .HasForeignKey("contactid", "contactuserid");

                    b.Navigation("contact");
                });

            modelBuilder.Entity("WebApplicationGoChat.Models.Contact", b =>
                {
                    b.Navigation("Messages");
                });

            modelBuilder.Entity("WebApplicationGoChat.Models.User", b =>
                {
                    b.Navigation("Contacts");
                });
#pragma warning restore 612, 618
        }
    }
}
